name: Test Suite

on:
  pull_request:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - main

concurrency:
  # For pull requests, cancel running workflows, for main, run all
  #
  # `github.event.number` exists for pull requests, otherwise fall back to SHA
  # for main
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: full
  VERBOSE: true
  CI: true
  PROFILE: debug

jobs:
  test-versions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust_version: ["1.82", "stable"]
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust_version }}
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2

      - name: "Check clippy"
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings

      - name: "Check licenses"
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -- check

  test-all-versions:
    runs-on: ubuntu-latest
    needs: test-versions
    if: always()
    steps:
      - name: All versions work
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Some version failed
        if: ${{ (contains(needs.*.result, 'failure')) }}
        run: exit 1

  check-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v2

      - name: "Check format"
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

  check-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2

      - name: "Install cargo-deny"
        run: cargo install --locked cargo-deny
      - name: "Check deny list"
        run: cargo deny check
      - name: "Check if Cargo.lock changed"
        run: git diff --exit-code

  check-msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2

      - name: "Install cargo-msrv"
        run: cargo install --locked cargo-msrv
      - name: "Check MSRV"
        run: cargo msrv verify
